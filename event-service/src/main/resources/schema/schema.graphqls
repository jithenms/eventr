type Query {
    getStudents: [User]
    getStudent(authId: String): User
    getTeachers: [User]
    getTeacher(authId: String): User
    getEvents: [Event]
    getEvent(eventId: String): Event
    getEventsByTeacher(id: String): [Event]
    getLeaderboard(leaderboardInput: LeaderboardInput!): [User]
}

type Mutation {
    registerUser(registerUserInput: RegisterUserInput!): User
    deleteStudent(userId: String): String
    deleteTeacher(userId: String): String
    createEvent(createEventInput: CreateEventInput!): Event
    joinEvent(joinEventInput: JoinEventInput!): Event
    leaveEvent(leaveEventInput: LeaveEventInput!): Event
    denyStudentRequest(denyStudentRequestInput: DenyStudentRequestInput!): Event
    acceptStudentRequest(acceptStudentRequestInput: AcceptStudentRequestInput!): Event
    deleteEvent(eventId: String): String
    addPoints(addPointsInput: AddPointsInput!): User
    deleteAllEvents: String
#    createClassroom(createClassroomInput: CreateClassroomInput!): Classroom
#    joinClassroom(joinClassroomInput: JoinClassroomInput!): JoinClassroomOutput
#    leaveClassroom(leaveClassroomInput: LeaveClassroomInput!): LeaveClassroomOutput
#    requestPass(requestPassInput: CreatePassInput!): RequestPassOutput
#    createPass(createPassInput: CreatePassInput!): Pass
#    revokePass(passId: ID!): Pass
}

input AcceptStudentRequestInput {
    eventId: String
    studentId: String
}

input DenyStudentRequestInput {
    eventId: String
    studentId: String
}

input AddPointsInput {
    studentId: String
    points: Int
}

input RegisterUserInput {
    firstName: String
    lastName: String
    email: String
    password: String
    role: UserRole
    grade: Int
}

input CreateEventInput {
    teacherId: String
    title: String
    description: String
    date: String
    time: String
    points: Int
    quarter: Int
}

input LeaveEventInput {
    eventId: String
    studentId: String
}

input JoinEventInput {
    eventId: String
    studentId: String
}

enum UserRole {
    STUDENT
    TEACHER
}

type User {
    id: String
    authId: String
    firstName: String
    lastName: String
    email: String
    grade: Int
    role: UserRole
    joinedEvents: [Event]
    requestedEvents: [Event]
    points: Int
    q1points: Int
    q2points: Int
    q3points: Int
    q4points: Int
    createdAt: String
}

type Event {
    id: String
    teacherId: String
    teacher: User
    title: String
    description: String
    points: Int
    time: String
    date: String
    quarter: Int
    studentListLength: Int
    studentIdList: [User]
    studentIdRequests: [User]
    createdAt: String
}

input LeaderboardInput {
    quarter: Int
    sortBy: String
}